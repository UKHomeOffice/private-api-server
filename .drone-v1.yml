---
kind: pipeline
type: kubernetes
name: default

platform:
  os: linux
  arch: amd64

workspace:
  base: /build
  path: src/github.com/ukhomeoffice/private-api-server

steps:
- name: test
  pull: if-not-exists
  image: node:8
  commands:
  - ./gradlew test
  environment:
    GRADLE_USER_HOME: ~/.gradle
  when:
    event:
    - push
    - pull_request

- name: sonar-scanner
  pull: if-not-exists
  image: quay.io/ukhomeofficedigital/sonar-scanner:v3.0.1
  when:
    event:
    - push
    - pull_request
    status:
    - failure
    - success

- name: build
  pull: if-not-exists
  image: docker:17.09.1
  commands:
  - docker build -t $${DOCKER_NAME} .
  environment:
    DOCKER_HOST: tcp://172.17.0.1:2375
    DOCKER_NAME:
      from_secret: docker_name
  when:
    event:
    - push
    - pull_request

- name: image_to_quay
  pull: if-not-exists
  image: docker:17.09.1
  commands:
  - docker login -u=$${DOCKER_USERNAME} -p=$${DOCKER_PASSWORD} $${DOCKER_SERVER}
  - docker tag $${DOCKER_NAME} $${DOCKER_SERVER}/$${DOCKER_GROUP}/$${DOCKER_NAME}:latest
  - docker push $${DOCKER_SERVER}/$${DOCKER_GROUP}/$${DOCKER_NAME}:latest
  environment:
    DOCKER_GROUP:
      from_secret: docker_group
    DOCKER_HOST: tcp://172.17.0.1:2375
    DOCKER_NAME:
      from_secret: docker_name
    DOCKER_PASSWORD:
      from_secret: docker_password
    DOCKER_SERVER:
      from_secret: docker_server
    DOCKER_USERNAME:
      from_secret: docker_username
  when:
    branch:
    - master
    event:
    - push

- name: tag_image_to_quay
  pull: if-not-exists
  image: docker:17.09.1
  commands:
  - docker login -u=$${DOCKER_USERNAME} -p=$${DOCKER_PASSWORD} $${DOCKER_SERVER}
  - docker tag $${DOCKER_NAME} $${DOCKER_SERVER}/$${DOCKER_GROUP}/$${DOCKER_NAME}:$${DRONE_COMMIT_SHA}
  - docker push $${DOCKER_SERVER}/$${DOCKER_GROUP}/$${DOCKER_NAME}:$${DRONE_COMMIT_SHA}
  environment:
    DOCKER_GROUP:
      from_secret: docker_group
    DOCKER_HOST: tcp://172.17.0.1:2375
    DOCKER_NAME:
      from_secret: docker_name
    DOCKER_PASSWORD:
      from_secret: docker_password
    DOCKER_SERVER:
      from_secret: docker_server
    DOCKER_USERNAME:
      from_secret: docker_username
  when:
    branch:
    - master
    event:
    - tag

...
